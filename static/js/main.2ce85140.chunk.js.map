{"version":3,"sources":["redux/reducers.js","redux/store.js","containers/index/index.jsx","containers/resume/resume.jsx","containers/life/life.jsx","containers/future/future.jsx","components/nav/nav.jsx","index.js"],"names":["combineReducers","xxx","state","createStore","reducers","applyMiddleware","thunk","Index","className","Component","Resume","Life","Future","Mynav","props","clickHandle","bind","isOpen","history","listen","route","setState","this","type","id","checked","onChange","to","htmlFor","withRouter","render","store","path","component","from","document","getElementById"],"mappings":"6PAOeA,kBAAgB,CAC3BC,IALJ,WAA+B,IAAlBC,EAAiB,uDAAX,EACf,OAAOA,KCAIC,cAAYC,EAAUC,YAAgBC,M,6BCDhCC,G,6KAEb,OACI,6BACI,yBAAKC,UAAU,SACX,wCACA,wCACA,wCACA,wCACA,wCACA,yCAEJ,yBAAKA,UAAU,WACX,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,8C,GApBeC,cCFdC,E,uKAEb,OACI,2C,GAHwBD,aCAfE,E,uKAEb,OACI,yC,GAHsBF,aCAbG,E,uKAEb,OACI,2C,GAHwBH,a,QCG9BI,G,wDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKd,MAAQ,CACTe,QAAO,GAEX,EAAKH,MAAMI,QAAQC,QAAO,SAAAC,GACtB,EAAKC,SAAS,CACVJ,QAAO,OARA,E,0DAcfK,KAAKD,SAAS,CACVJ,QAAQK,KAAKpB,MAAMe,W,+BAGhB,IAAD,OACN,OACI,6BACI,yBAAKT,UAAU,OACX,2BAAOe,KAAK,WAAWf,UAAU,UAAUgB,GAAG,UAAUC,QAASH,KAAKpB,MAAMe,OAAQS,SAAU,kBAAK,EAAKX,iBACpG,yBAAKP,UAAU,gBACX,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aAAY,kBAAC,IAAD,CAASmB,GAAG,KAAI,0BAAMnB,UAAU,kBAAhB,oBAC1C,wBAAIA,UAAU,aAAY,kBAAC,IAAD,CAASmB,GAAG,WAAU,0BAAMnB,UAAU,kBAAhB,oBAChD,wBAAIA,UAAU,aAAY,kBAAC,IAAD,CAASmB,GAAG,SAAQ,0BAAMnB,UAAU,kBAAhB,oBAC9C,wBAAIA,UAAU,aAAY,kBAAC,IAAD,CAASmB,GAAG,WAAU,0BAAMnB,UAAU,kBAAhB,sBAGxD,2BAAOA,UAAU,WAAWoB,QAAQ,kB,GAhCxCnB,cAsCLoB,cAAWhB,GC7B1BiB,iBACI,kBAAC,IAAD,CAAUC,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAW1B,IAChC,kBAAC,IAAD,CAAOyB,KAAK,UAAUC,UAAWvB,IACjC,kBAAC,IAAD,CAAOsB,KAAK,QAAQC,UAAWtB,IAC/B,kBAAC,IAAD,CAAOqB,KAAK,UAAUC,UAAWrB,IACjC,kBAAC,IAAD,CAAUsB,KAAK,IAAIP,GAAG,cAIpCQ,SAASC,eAAe,W","file":"static/js/main.2ce85140.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\n\n\nfunction xxx(state=0, action) {\n    return state\n}\n\nexport default combineReducers({\n    xxx\n})","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nexport default createStore(reducers, applyMiddleware(thunk))","import React, {Component} from 'react'\nimport './index.css'\n\nexport default class Index extends Component{\n    render () {\n        return (\n            <div>\n                <div className='hello'>\n                    <span>你</span>\n                    <span>好</span>\n                    <span>，</span>\n                    <span>陌</span>\n                    <span>生</span>\n                    <span>人</span>\n                </div>\n                <div className='welcome'>\n                    <span>欢</span>\n                    <span>迎</span>\n                    <span>来</span>\n                    <span>到</span>\n                    <span>我</span>\n                    <span>的</span>\n                    <span>世</span>\n                    <span>界</span>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nexport default class Resume extends Component{\n    render () {\n        return (\n            <div>Resume</div>\n        )\n    }\n}","import React, {Component} from 'react'\nexport default class Life extends Component{\n    render () {\n        return (\n            <div>Life</div>\n        )\n    }\n}","import React, {Component} from 'react'\nexport default class Future extends Component{\n    render () {\n        return (\n            <div>Future</div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {NavLink,withRouter} from \"react-router-dom\"\nimport './nav.css'\n\nclass Mynav extends Component{\n    constructor(props) {\n        super(props);\n        this.clickHandle = this.clickHandle.bind(this);\n        this.state = {\n            isOpen:false\n        };\n        this.props.history.listen(route => {\n            this.setState({\n                isOpen:false\n            });\n        })\n    }\n\n    clickHandle () {\n        this.setState({\n            isOpen:!this.state.isOpen\n        });\n    }\n    render () {\n        return (\n            <div>\n                <nav className=\"nav\">\n                    <input type=\"checkbox\" className=\"nav__cb\" id=\"menu-cb\" checked={this.state.isOpen} onChange={()=> this.clickHandle() }/>\n                        <div className=\"nav__content\">\n                            <ul className=\"nav__items\">\n                                <li className=\"nav__item\"><NavLink to='/'><span className=\"nav__item-text\"> 主页 </span></NavLink></li>\n                                <li className=\"nav__item\"><NavLink to='/resume'><span className=\"nav__item-text\"> 简历 </span></NavLink></li>\n                                <li className=\"nav__item\"><NavLink to='/life'><span className=\"nav__item-text\"> 生活 </span></NavLink></li>\n                                <li className=\"nav__item\"><NavLink to='/future'><span className=\"nav__item-text\"> 展望 </span></NavLink></li>\n                            </ul>\n                        </div>\n                        <label className=\"nav__btn\" htmlFor=\"menu-cb\"/>\n                </nav>\n            </div>\n        )\n    }\n}\nexport default withRouter(Mynav)","import React from \"react\";\nimport {render} from \"react-dom\";\nimport {HashRouter, Switch, Route, Redirect} from \"react-router-dom\";\n\nimport {Provider} from \"react-redux\";\nimport store from './redux/store';\n\nimport Index from \"./containers/index/index\";\nimport Resume from \"./containers/resume/resume\";\nimport Life from \"./containers/life/life\";\nimport Future from \"./containers/future/future\";\nimport Mynav from \"./components/nav/nav\";\n\nrender((\n    <Provider store={store}>\n        <HashRouter>\n            <Mynav />\n            <Switch>\n                <Route path='/index' component={Index} />\n                <Route path='/resume' component={Resume} />\n                <Route path='/life' component={Life} />\n                <Route path='/future' component={Future} />\n                <Redirect from='/' to='/index' />\n            </Switch>\n        </HashRouter>\n    </Provider>\n),document.getElementById('root'));"],"sourceRoot":""}